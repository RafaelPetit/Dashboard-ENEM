from typing import Optional
from utils.mappings import get_mappings

# Obter limiares dos mapeamentos centralizados
mappings = get_mappings()
LIMIARES_ESTATISTICOS = mappings['limiares_estatisticos']

# Constantes para classifica√ß√£o de correla√ß√£o
LIMITE_CORRELACAO_FRACA = LIMIARES_ESTATISTICOS['correlacao_fraca']
LIMITE_CORRELACAO_MODERADA = LIMIARES_ESTATISTICOS['correlacao_moderada']
LIMITE_CORRELACAO_FORTE = LIMIARES_ESTATISTICOS['correlacao_forte']

def get_tooltip_analise_comparativa() -> str:
    """
    Retorna o texto do tooltip para a an√°lise comparativa por vari√°vel demogr√°fica.
    
    Retorna:
    --------
    str: Texto formatado em HTML para exibi√ß√£o em tooltip
    """
    return """
    Sobre esta visualiza√ß√£o:<br>
    Compara o desempenho entre diferentes grupos demogr√°ficos nas √°reas de conhecimento.
    
    Como usar:<br>
    - Selecione a vari√°vel demogr√°fica desejada
    - Escolha entre gr√°fico de barras (para compara√ß√µes diretas) ou linhas (para visualizar tend√™ncias)
    - Use as op√ß√µes de ordena√ß√£o para destacar disparidades
    - Aplique filtros por compet√™ncia para an√°lises espec√≠ficas
    - Explore a an√°lise detalhada dispon√≠vel na se√ß√£o expans√≠vel abaixo do gr√°fico
    
    Os dados s√£o processados em tempo real com otimiza√ß√£o de mem√≥ria para garantir alta performance mesmo com grandes volumes de dados.
    
    Passe o mouse sobre os elementos para ver valores exatos e use a legenda para destacar √°reas espec√≠ficas.
    """


def get_tooltip_relacao_competencias() -> str:
    """
    Retorna o texto do tooltip para a visualiza√ß√£o da rela√ß√£o entre compet√™ncias.
    
    Retorna:
    --------
    str: Texto formatado em HTML para exibi√ß√£o em tooltip
    """
    return """
    Sobre esta visualiza√ß√£o:<br>
    Exibe como o desempenho em duas compet√™ncias se relaciona para cada candidato, com an√°lise estat√≠stica de correla√ß√£o.
    
    Como usar:<br>
    - Selecione as compet√™ncias para os eixos X e Y
    - Aplique filtros opcionais (sexo, tipo de escola)
    - Ative a op√ß√£o de excluir notas zero para an√°lises mais precisas
    - Explore os agrupamentos por cor/ra√ßa ou faixa salarial
    - Observe a linha de tend√™ncia que mostra a correla√ß√£o estat√≠stica
    - Consulte a an√°lise detalhada dispon√≠vel na se√ß√£o expans√≠vel abaixo
    
    O sistema calcula automaticamente coeficientes de correla√ß√£o, determina√ß√£o (r¬≤) e fornece interpreta√ß√µes educacionais contextualizadas.
    
    Use os controles de zoom e interaja com a legenda para explorar os dados em detalhe.
    """


def get_tooltip_desempenho_estados() -> str:
    """
    Retorna o texto do tooltip para a visualiza√ß√£o de desempenho por estado/regi√£o.
    
    Retorna:
    --------
    str: Texto formatado em HTML para exibi√ß√£o em tooltip
    """
    return """
    Sobre esta visualiza√ß√£o:<br>
    Apresenta as m√©dias de desempenho por estado ou regi√£o em cada √°rea de conhecimento.
    
    Como usar:<br>
    - Compare todas as √°reas simultaneamente ou filtre por √°rea espec√≠fica
    - Ative a ordena√ß√£o para visualizar rankings por desempenho
    - Alterne entre visualiza√ß√£o por estado ou por regi√£o
    - Passe o mouse sobre os pontos para ver valores exatos
    - Clique em itens da legenda para destacar ou ocultar √°reas espec√≠ficas
    - Explore a "An√°lise detalhada" abaixo para insights aprofundados
    
    O processamento dos dados √© otimizado para lidar com grandes volumes de informa√ß√£o, calculando automaticamente estat√≠sticas relevantes como variabilidade, diferen√ßas percentuais e compara√ß√µes regionais.
    
    Veja a an√°lise autom√°tica para identificar rapidamente padr√µes e disparidades regionais.
    """


def get_explicacao_barras_comparativo(variavel_nome: str) -> str:
    """
    Retorna a explica√ß√£o para o gr√°fico de barras comparativo.
    
    Par√¢metros:
    -----------
    variavel_nome : str
        Nome da vari√°vel demogr√°fica selecionada
        
    Retorna:
    --------
    str: Texto explicativo formatado em Markdown
    """
    # Valida√ß√£o do par√¢metro
    if not variavel_nome:
        variavel_nome = "vari√°vel selecionada"
        
    return f"""
    **An√°lise do desempenho por {variavel_nome}:**
    
    Os dados revelam padr√µes significativos no desempenho quando agrupados por {variavel_nome.lower()}:
    
    - **Disparidades entre grupos:**
      As barras permitem identificar quais grupos apresentam desempenho superior/inferior, destacando inequidades potenciais
    
    - **Varia√ß√µes por √°rea de conhecimento:**
      Observe em quais compet√™ncias as diferen√ßas s√£o mais acentuadas, revelando poss√≠veis pontos para interven√ß√µes educacionais direcionadas
    
    - **Padr√µes sistem√°ticos:**
      Analise se as disparidades se repetem consistentemente nas diversas √°reas, sugerindo fatores estruturais que transcendem disciplinas espec√≠ficas
    
    - **Magnitudes comparativas:**
      A escala uniforme permite comparar o tamanho das disparidades entre diferentes compet√™ncias
    
    Estas informa√ß√µes s√£o essenciais para entender como fatores socioecon√¥micos e demogr√°ficos impactam resultados educacionais e para direcionar pol√≠ticas de redu√ß√£o de desigualdades.
    
    **üí° Recomenda√ß√£o:** Expanda a se√ß√£o "Ver an√°lise detalhada por categoria" logo abaixo para acessar m√©tricas adicionais, estat√≠sticas de variabilidade entre grupos e uma an√°lise completa das disparidades por compet√™ncia.
    """


def get_explicacao_linhas_comparativo(variavel_nome: str) -> str:
    """
    Retorna a explica√ß√£o para o gr√°fico de linhas comparativo.
    
    Par√¢metros:
    -----------
    variavel_nome : str
        Nome da vari√°vel demogr√°fica selecionada
        
    Retorna:
    --------
    str: Texto explicativo formatado em Markdown
    """
    # Valida√ß√£o do par√¢metro
    if not variavel_nome:
        variavel_nome = "vari√°vel selecionada"
        
    return f"""
    **An√°lise de tend√™ncias por {variavel_nome}:**
    
    O gr√°fico de linha revela padr√µes evolutivos importantes no desempenho:
    
    - **Progress√µes graduais:**
      As linhas mostram como o desempenho varia entre categorias consecutivas, revelando rela√ß√µes proporcionais e tend√™ncias
    
    - **Pontos de inflex√£o:**
      Identifique momentos onde h√° mudan√ßas abruptas no padr√£o, indicando poss√≠veis limiares cr√≠ticos ou transi√ß√µes importantes
    
    - **Converg√™ncias e diverg√™ncias:**
      Observe onde as linhas de diferentes compet√™ncias se aproximam ou se distanciam, sugerindo √°reas com desafios espec√≠ficos
    
    - **Efeitos de ordena√ß√£o:**
      Ao usar a ordena√ß√£o por valor decrescente, √© poss√≠vel visualizar facilmente a hierarquia de desempenho entre categorias
    
    Esta perspectiva din√¢mica ajuda a compreender como diferentes caracter√≠sticas socioecon√¥micas influenciam sistematicamente o desempenho educacional ao longo de um espectro de categorias.
    
    **üí° Dica:** Para uma an√°lise mais profunda, incluindo estat√≠sticas de disparidade, variabilidade entre categorias e identifica√ß√£o de padr√µes espec√≠ficos por compet√™ncia, clique na se√ß√£o "Ver an√°lise detalhada por categoria" abaixo.
    """


def get_explicacao_dispersao(eixo_x_nome: str, eixo_y_nome: str, correlacao: float) -> str:
    """
    Retorna a explica√ß√£o para o gr√°fico de dispers√£o com base na correla√ß√£o calculada.
    
    Par√¢metros:
    -----------
    eixo_x_nome : str
        Nome da compet√™ncia no eixo X
    eixo_y_nome : str
        Nome da compet√™ncia no eixo Y
    correlacao : float
        Coeficiente de correla√ß√£o entre as compet√™ncias
        
    Retorna:
    --------
    str: Texto explicativo formatado em Markdown
    """
    # Valida√ß√£o de par√¢metros
    if not eixo_x_nome or not eixo_y_nome:
        eixo_x_nome = "Compet√™ncia 1" if not eixo_x_nome else eixo_x_nome
        eixo_y_nome = "Compet√™ncia 2" if not eixo_y_nome else eixo_y_nome
        
    try:
        correlacao_float = float(correlacao)
    except (ValueError, TypeError):
        correlacao_float = 0.0
        
    # Determinar tipo de correla√ß√£o para explica√ß√£o contextualizada
    descricao_correlacao, padrao_texto, implicacao = _obter_descricao_correlacao(correlacao_float, eixo_x_nome, eixo_y_nome)
    
    # Determinar o coeficiente de determina√ß√£o (r¬≤)
    r_squared = correlacao_float**2
    r_squared_percent = r_squared * 100
    
    return f"""
    **An√°lise da rela√ß√£o entre {eixo_x_nome} e {eixo_y_nome}:**
    
    Os dados revelam uma {descricao_correlacao} entre estas duas compet√™ncias:
    
    - **Padr√£o de distribui√ß√£o:**
      A nuvem de pontos {padrao_texto}, o que {implicacao}
    
    - **Coeficiente de determina√ß√£o:**
      O r¬≤ de {r_squared:.2f} indica que {r_squared_percent:.1f}% da varia√ß√£o em uma compet√™ncia pode ser explicada pela outra
    
    - **Agrupamentos demogr√°ficos:**
      Observe como diferentes grupos se distribuem no espa√ßo de desempenho, revelando poss√≠veis padr√µes de inequidade educacional
    
    - **Linha de tend√™ncia:**
      A linha vermelha tracejada representa a rela√ß√£o estat√≠stica linear entre as duas compet√™ncias
    
    Esta visualiza√ß√£o √© fundamental para entender como diferentes habilidades cognitivas se relacionam no processo educacional e como interven√ß√µes em uma √°rea podem impactar outras.
    
    **üìä An√°lise avan√ßada:** N√£o deixe de clicar em "Ver an√°lise detalhada da correla√ß√£o" logo abaixo para acessar estat√≠sticas completas de ambas as compet√™ncias, interpreta√ß√£o educacional contextualizada e an√°lises adicionais de variabilidade.
    """


def get_explicacao_desempenho_estados(
    area_texto: str, 
    melhor_estado: str, 
    pior_estado: str, 
    variabilidade: str, 
    tipo_localidade: str = "estado"
) -> str:
    """
    Retorna a explica√ß√£o para o gr√°fico de desempenho por estado/regi√£o.
    
    Par√¢metros:
    -----------
    area_texto : str
        Texto descritivo da √°rea selecionada
    melhor_estado : str
        Nome do estado/regi√£o com melhor desempenho
    pior_estado : str
        Nome do estado/regi√£o com pior desempenho
    variabilidade : str
        Descri√ß√£o da variabilidade entre estados/regi√µes
    tipo_localidade : str, default="estado"
        Tipo de localidade (estado ou regi√£o)
        
    Retorna:
    --------
    str: Texto explicativo formatado em Markdown
    """
    # Valida√ß√£o de par√¢metros
    area_texto = area_texto if area_texto else ""
    melhor_estado = melhor_estado if melhor_estado else "Dado indispon√≠vel"
    pior_estado = pior_estado if pior_estado else "Dado indispon√≠vel"
    variabilidade = variabilidade.lower() if variabilidade else "vari√°vel"
    
    # Ajustar se temos estados indispon√≠veis
    melhor_info = f"**{melhor_estado}** apresenta o melhor desempenho m√©dio" if melhor_estado != "Dado indispon√≠vel" else ""
    pior_info = f"**{pior_estado}** apresenta o menor desempenho m√©dio" if pior_estado != "Dado indispon√≠vel" else ""
    
    # Criar lista de bullet points baseada nos dados dispon√≠veis
    pontos_chave = []
    if melhor_info:
        pontos_chave.append(melhor_info)
    if pior_info:
        pontos_chave.append(pior_info)
    pontos_chave.append(f"A an√°lise indica uma **{variabilidade} varia√ß√£o** no desempenho entre {tipo_localidade}s")
    
    # Formatar bullets como string
    bullets = "\n".join([f"- {ponto}" for ponto in pontos_chave])
    
    return f"""
    **An√°lise do desempenho por {tipo_localidade}{area_texto}:**
    
    O gr√°fico mostra diferen√ßas significativas no desempenho m√©dio entre diferentes {tipo_localidade}s do Brasil:
    
    {bullets}
    
    Estas diferen√ßas regionais podem refletir:
    - Disparidades nos sistemas educacionais locais
    - Varia√ß√µes no n√≠vel socioecon√¥mico m√©dio de cada regi√£o
    - Diferen√ßas no acesso a recursos educacionais
    - Fatores contextuais espec√≠ficos de cada localidade
    
    A visualiza√ß√£o permite identificar padr√µes regionais que podem orientar pol√≠ticas educacionais focalizadas e redistribui√ß√£o de recursos.
    
    **üí° Dica:** Para explorar estat√≠sticas detalhadas, compara√ß√µes regionais e an√°lise percentual das diferen√ßas, clique em "Ver an√°lise detalhada por {tipo_localidade}" abaixo. A op√ß√£o de visualiza√ß√£o por regi√£o tamb√©m est√° dispon√≠vel para an√°lises mais abrangentes.
    """


def get_interpretacao_correlacao(correlacao: float, eixo_x_nome: str, eixo_y_nome: str) -> str:
    """
    Gera uma interpreta√ß√£o educacional da correla√ß√£o entre compet√™ncias.
    
    Par√¢metros:
    -----------
    correlacao : float
        Coeficiente de correla√ß√£o entre as compet√™ncias
    eixo_x_nome : str
        Nome da compet√™ncia no eixo X
    eixo_y_nome : str
        Nome da compet√™ncia no eixo Y
        
    Retorna:
    --------
    str: Texto interpretativo da correla√ß√£o
    """
    # Valida√ß√£o de par√¢metros
    if not eixo_x_nome or not eixo_y_nome:
        eixo_x_nome = "Compet√™ncia 1" if not eixo_x_nome else eixo_x_nome
        eixo_y_nome = "Compet√™ncia 2" if not eixo_y_nome else eixo_y_nome
        
    try:
        correlacao_abs = abs(float(correlacao))
    except (ValueError, TypeError):
        correlacao_abs = 0.0
    
    if correlacao_abs > LIMITE_CORRELACAO_FORTE:
        return f"""
        Existe uma forte associa√ß√£o entre as compet√™ncias, sugerindo que habilidades e conhecimentos semelhantes s√£o necess√°rios para ambas as √°reas. 
        
        Estudantes com bom desempenho em {eixo_x_nome} muito provavelmente tamb√©m ter√£o bom desempenho em {eixo_y_nome}.
        
        Implica√ß√µes educacionais:
        - Estrat√©gias pedag√≥gicas que desenvolvem uma √°rea provavelmente beneficiar√£o a outra
        - Interven√ß√µes podem ser coordenadas para maximizar benef√≠cios em ambas as √°reas
        - Dificuldades em uma compet√™ncia podem sinalizar desafios na outra
        """
    elif correlacao_abs > LIMITE_CORRELACAO_MODERADA:
        return f"""
        H√° uma associa√ß√£o moderada entre as compet√™ncias, indicando que algumas habilidades se sobrep√µem, mas cada √°rea tamb√©m exige conhecimentos espec√≠ficos.
        
        Muitos estudantes com bom desempenho em {eixo_x_nome} tamb√©m ter√£o bom desempenho em {eixo_y_nome}, mas h√° exce√ß√µes significativas.
        
        Implica√ß√µes educacionais:
        - Existe complementaridade parcial entre as √°reas
        - Algumas estrat√©gias de ensino podem beneficiar ambas as compet√™ncias
        - √â importante aten√ß√£o espec√≠fica para cada √°rea, pois h√° aspectos independentes
        """
    elif correlacao_abs > LIMITE_CORRELACAO_FRACA:
        return f"""
        A associa√ß√£o fraca sugere que as compet√™ncias compartilham algumas habilidades b√°sicas, mas s√£o amplamente distintas em seus requisitos.
        
        O desempenho em {eixo_x_nome} √© apenas um preditor limitado do desempenho em {eixo_y_nome}.
        
        Implica√ß√µes educacionais:
        - As √°reas requerem abordagens pedag√≥gicas diferenciadas
        - O desenvolvimento em uma √°rea tem impacto reduzido na outra
        - As avalia√ß√µes devem considerar cada compet√™ncia de forma independente
        """
    else:
        return f"""
        H√° pouca ou nenhuma associa√ß√£o linear entre as compet√™ncias, indicando que s√£o √°reas de conhecimento e habilidades distintas.
        
        O desempenho em {eixo_x_nome} n√£o permite prever o desempenho em {eixo_y_nome}.
        
        Implica√ß√µes educacionais:
        - As compet√™ncias requerem estrat√©gias de ensino completamente diferentes
        - O desenvolvimento em uma √°rea n√£o implica em benef√≠cios para a outra
        - As √°reas devem ser trabalhadas como dom√≠nios independentes no curr√≠culo
        """


# Fun√ß√µes auxiliares

def _obter_descricao_correlacao(correlacao: float, eixo_x_nome: str, eixo_y_nome: str) -> tuple:
    """
    Obt√©m descri√ß√µes textuais para explicar uma correla√ß√£o espec√≠fica.
    
    Par√¢metros:
    -----------
    correlacao : float
        Coeficiente de correla√ß√£o a ser descrito
    eixo_x_nome : str
        Nome da compet√™ncia no eixo X
    eixo_y_nome : str
        Nome da compet√™ncia no eixo Y
        
    Retorna:
    --------
    tuple: (descri√ß√£o_correla√ß√£o, padr√£o_texto, implica√ß√£o)
    """
    # Determinar tipo de correla√ß√£o para explica√ß√£o contextualizada
    if correlacao > 0.7:
        descricao_correlacao = f"forte correla√ß√£o positiva (r={correlacao:.2f})"
        padrao_texto = "mostra um padr√£o claro de associa√ß√£o positiva, com pontos formando uma tend√™ncia diagonal ascendente"
        implicacao = "sugere que estas compet√™ncias compartilham bases cognitivas ou pedag√≥gicas semelhantes"
    elif correlacao > 0.4:
        descricao_correlacao = f"correla√ß√£o moderada positiva (r={correlacao:.2f})"
        padrao_texto = "apresenta uma tend√™ncia diagonal vis√≠vel, embora com dispers√£o consider√°vel"
        implicacao = "indica algum grau de interdepend√™ncia entre estas compet√™ncias"
    elif correlacao > 0.2:
        descricao_correlacao = f"correla√ß√£o fraca positiva (r={correlacao:.2f})"
        padrao_texto = "mostra uma leve tend√™ncia de associa√ß√£o, mas com alta dispers√£o"
        implicacao = "sugere que h√° outros fatores importantes que determinam o desempenho em cada √°rea"
    elif correlacao > -0.2:
        descricao_correlacao = f"correla√ß√£o insignificante (r={correlacao:.2f})"
        padrao_texto = "apresenta distribui√ß√£o difusa sem padr√£o claro"
        implicacao = "indica que estas compet√™ncias funcionam de forma independente"
    elif correlacao > -0.4:
        descricao_correlacao = f"correla√ß√£o fraca negativa (r={correlacao:.2f})"
        padrao_texto = "mostra uma leve tend√™ncia inversa, mas com alta dispers√£o"
        implicacao = "sugere um pequeno trade-off entre estas compet√™ncias"
    elif correlacao > -0.7:
        descricao_correlacao = f"correla√ß√£o moderada negativa (r={correlacao:.2f})"
        padrao_texto = "apresenta tend√™ncia diagonal descendente vis√≠vel"
        implicacao = "indica que pode haver certo antagonismo entre as habilidades necess√°rias"
    else:
        descricao_correlacao = f"forte correla√ß√£o negativa (r={correlacao:.2f})"
        padrao_texto = "mostra padr√£o claro de associa√ß√£o inversa"
        implicacao = "sugere um forte trade-off entre as habilidades envolvidas"
        
    return descricao_correlacao, padrao_texto, implicacao